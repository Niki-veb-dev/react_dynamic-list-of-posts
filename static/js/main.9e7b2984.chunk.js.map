{"version":3,"sources":["api/posts.ts","components/Loader/Loader.tsx","components/PostsList/PostListUi.tsx","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentFormUI.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetailsUi.tsx","components/PostDetails/PostDetails.tsx","components/UserSelect/UserSelect.tsx","App.tsx","index.tsx"],"names":["URL","getPosts","uesrId","a","url","fetch","posts","json","getPostDetails","postId","postDetails","getPostComments","then","response","comments","filteredComments","filter","comment","deleteComment","commentId","method","addComment","body","JSON","stringify","headers","Loader","className","PostsListUi","initialize","selectedPostId","setSelectePostId","map","post","userId","type","onClick","id","PostsList","selectedUserId","useState","setPosts","setInitialize","loadData","useEffect","NewCommentFormUi","name","email","handleOnChange","handleOnSubmit","value","placeholder","onChange","NewCommentForm","handleAdd","state","setState","event","target","PostDetailsUi","handleDelete","handleVisabiliti","isHidden","title","length","classNames","hide","PostDetails","setPostDedails","setComments","setHidden","Promise","all","postFromServer","commentsFromServer","UserSelect","setSelectedUserId","App","setUserId","setPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e7b2984.chunk.js","sourcesContent":["const URL = 'https://mate.academy/students-api/';\n\nexport async function getPosts(uesrId: number): Promise<Post[]> {\n  let url = `${URL}posts`;\n\n  if (uesrId !== 0) {\n    url += `?userId=${uesrId}`;\n  }\n\n  const posts = await fetch(url);\n\n  return posts.json();\n}\n\nexport async function getPostDetails(postId: number): Promise<Post> {\n  const postDetails = await fetch(`${URL}posts/${postId}`);\n\n  return postDetails.json();\n}\n\nexport async function getPostComments(postId: number) {\n  const comments = await fetch(`${URL}comments`).then(response => response.json());\n  const filteredComments = comments.filter((comment: { postId: number; }) => (\n    comment.postId === postId\n  ));\n\n  return filteredComments as Comment[];\n}\n\nexport async function deleteComment(commentId: number) {\n  const url = `${URL}comments/${commentId}`;\n\n  return fetch(url, { method: 'DELETE' });\n}\n\nexport async function addComment(comment: NewComment) {\n  return fetch(`${URL}comments`, {\n    method: 'POST',\n    body: JSON.stringify({ ...comment }),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Loader } from '../Loader';\n\ntype Props = {\n  posts: Post[]\n  initialize:boolean\n  selectedPostId: number,\n  setSelectePostId: (postId: number) => void\n};\n\nexport const PostsListUi: React.FC<Props> = ({\n  posts,\n  initialize,\n  selectedPostId,\n  setSelectePostId,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n    <div>{!initialize ? <Loader /> : null}</div>\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li className=\"PostsList__item\" key={post.id}>\n          <div>\n            <b>\n              {`User #${post.userId}: `}\n            </b>\n            sunt aut facere repellat provident occaecati excepturi optio\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => setSelectePostId(post.id)}\n          >\n            {selectedPostId === post.id ? 'Close' : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getPosts } from '../../api/posts';\nimport { PostsListUi } from './PostListUi';\nimport './PostsList.scss';\n\ntype Props = {\n  selectedUserId: number,\n  selectedPostId: number,\n  setSelectePostId: (postId: number) => void\n};\n\nexport const PostsList: React.FC<Props> = ({\n  selectedUserId,\n  selectedPostId,\n  setSelectePostId,\n}) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [initialize, setInitialize] = useState(false);\n\n  const loadData = async () => {\n    setPosts(await getPosts(selectedUserId));\n    setInitialize(!initialize);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    loadData();\n  }, [selectedUserId]);\n\n  return (\n    <>\n      <PostsListUi\n        posts={posts}\n        initialize={initialize}\n        selectedPostId={selectedPostId}\n        setSelectePostId={setSelectePostId}\n      />\n    </>\n  );\n};\n","type Props = {\n  name: string,\n  body: string,\n  email: string,\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  handleOnSubmit: () => void\n};\n\nexport const NewCommentFormUi: React.FC<Props> = ({\n  body,\n  name,\n  email,\n  handleOnChange,\n  handleOnSubmit,\n}) => (\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n        onChange={handleOnChange}\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n        onChange={handleOnChange}\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        value={body}\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n        onChange={handleOnChange}\n      />\n    </div>\n\n    <button\n      type=\"button\"\n      className=\"NewCommentForm__submit-button button\"\n      onClick={handleOnSubmit}\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { NewCommentFormUi } from './NewCommentFormUI';\n\ntype Props = {\n  handleAdd: (comment: NewComment) => void\n  selectedPostId: number\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ handleAdd, selectedPostId }) => {\n  const [state, setState] = useState<NewComment>({\n    name: '',\n    email: '',\n    body: '',\n    postId: 0,\n  });\n\n  const clearState = () => {\n    setState({\n      name: '',\n      email: '',\n      body: '',\n      postId: 0,\n    });\n  };\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleOnSubmit = () => {\n    const post:NewComment = { ...state, postId: selectedPostId };\n\n    clearState();\n    handleAdd(post);\n  };\n\n  return (\n    <NewCommentFormUi\n      handleOnChange={handleOnChange}\n      handleOnSubmit={handleOnSubmit}\n      name={state.name}\n      email={state.email}\n      body={state.body}\n    />\n  );\n};\n","import classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\n\ntype Props = {\n  postDetails: Post,\n  isHidden: boolean,\n  comments: Comment[],\n  initialize: boolean,\n  selectedPostId: number,\n  handleAdd: (comment: NewComment) => void,\n  handleDelete: (commentId: number) => void,\n  handleVisabiliti: () => void,\n};\n\nexport const PostDetailsUi: React.FC<Props> = ({\n  handleAdd,\n  handleDelete,\n  handleVisabiliti,\n  selectedPostId,\n  postDetails,\n  initialize,\n  isHidden,\n  comments,\n}) => (\n  <div className=\"PostDetails\">\n    {selectedPostId !== 0\n      ? (\n        <>\n          <h2>Post details:</h2>\n          {initialize\n            ? <Loader />\n            : (\n              <>\n                <section className=\"PostDetails__post\">\n                  <p>{postDetails.title}</p>\n                </section>\n                <section className=\"PostDetails__comments\">\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={handleVisabiliti}\n                  >\n                    {`Hide ${comments.length} comments`}\n                  </button>\n\n                  <ul className=\"PostDetails__list\">\n                    {comments.map(comment => (\n                      <li\n                        key={comment.id}\n                        className={classNames(\n                          'PostDetails__list-item',\n                          {\n                            hide: isHidden,\n                          },\n                        )}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"PostDetails__remove-button button\"\n                          onClick={() => handleDelete(comment.id)}\n                        >\n                          X\n                        </button>\n                        <p>{comment.body}</p>\n                      </li>\n                    ))}\n                  </ul>\n                </section>\n              </>\n            )}\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm handleAdd={handleAdd} selectedPostId={selectedPostId} />\n            </div>\n          </section>\n        </>\n      )\n      : 'No post selected'}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport {\n  addComment, deleteComment, getPostComments, getPostDetails,\n} from '../../api/posts';\nimport { PostDetailsUi } from './PostDetailsUi';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [postDetails, setPostDedails] = useState({} as Post);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isHidden, setHidden] = useState(false);\n  const [initialize, setInitialize] = useState(false);\n\n  const loadData = async () => {\n    if (selectedPostId !== 0) {\n      setInitialize(true);\n      const [postFromServer, commentsFromServer] = await Promise.all([\n        getPostDetails(selectedPostId),\n        getPostComments(selectedPostId),\n      ]);\n\n      setPostDedails(postFromServer);\n      setComments(commentsFromServer);\n      setInitialize(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    loadData();\n  }, [selectedPostId]);\n\n  const handleVisabiliti = () => {\n    setHidden(!isHidden);\n  };\n\n  const handleDelete = async (commentId: number) => {\n    await deleteComment(commentId);\n    loadData();\n  };\n\n  const handleAdd = async (comment: NewComment) => {\n    await addComment(comment);\n\n    loadData();\n  };\n\n  return (\n    <PostDetailsUi\n      isHidden={isHidden}\n      comments={comments}\n      initialize={initialize}\n      postDetails={postDetails}\n      selectedPostId={selectedPostId}\n      handleAdd={handleAdd}\n      handleDelete={handleDelete}\n      handleVisabiliti={handleVisabiliti}\n    />\n  );\n};\n","import React from 'react';\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\ntype Props = {\n  selectedUserId: number\n  setSelectedUserId: (event: React.ChangeEvent<HTMLSelectElement>) => void\n};\n\nexport const UserSelect: React.FC<Props> = ({ selectedUserId, setSelectedUserId }) => {\n  return (\n    <header className=\"App__header\">\n      <label>\n        Select a user\n\n        <select\n          className=\"App__user-selector\"\n          value={selectedUserId}\n          onChange={setSelectedUserId}\n        >\n          <option value=\"0\">All users</option>\n          <option value=\"1\">Leanne Graham</option>\n          <option value=\"2\">Ervin Howell</option>\n          <option value=\"3\">Clementine Bauch</option>\n          <option value=\"4\">Patricia Lebsack</option>\n          <option value=\"5\">Chelsey Dietrich</option>\n          <option value=\"6\">Mrs. Dennis Schulist</option>\n          <option value=\"7\">Kurtis Weissnat</option>\n          <option value=\"8\">Nicholas Runolfsdottir V</option>\n          <option value=\"9\">Glenna Reichert</option>\n          <option value=\"10\">Leanne Graham</option>\n        </select>\n      </label>\n    </header>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect/UserSelect';\n\nexport const App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setPostId] = useState(0);\n\n  const setSelectePostId = (postId : number) => {\n    if (selectedPostId === postId) {\n      setPostId(0);\n    } else {\n      setPostId(postId);\n    }\n  };\n\n  const setSelectedUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedUserId = +event.target.value;\n\n    setUserId(selectedUserId);\n  };\n\n  return (\n    <div className=\"App\">\n      <UserSelect selectedUserId={userId} setSelectedUserId={setSelectedUserId} />\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUserId={userId}\n            setSelectePostId={setSelectePostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails selectedPostId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}